name: Build

on:
  push:
    branches:
    - master
    tags:
    - v*.*.*
  pull_request:
    branches:
    - master

jobs:
  all:
    name: All

    strategy:
      matrix:
        os:
        - macos-latest
        - ubuntu-latest
        - windows-latest
        include:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-musl
        - os: macos-latest
          target: x86_64-apple-darwin
        - os: windows-latest
          target: x86_64-pc-windows-msvc

    runs-on: ${{matrix.os}}

    env:
      RUSTFLAGS: "-D warnings"

    steps:
    - uses: actions/checkout@v2
      if: github.event_name == 'pull_request'
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - uses: actions/checkout@v2
      if: github.event_name != 'pull_request'
      with:
        fetch-depth: 0

    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target: ${{matrix.target}}
        profile: minimal
        components: clippy, rustfmt
        override: true

    - name: Info
      run: |
        rustup --version
        cargo --version
        cargo clippy --version

    - name: Build
      run: cargo build --all --verbose

    - name: Test
      run: cargo test --all --verbose

    - name: Clippy
      run: cargo clippy --all

    - name: Check Formatting
      run: cargo fmt --all -- --check
